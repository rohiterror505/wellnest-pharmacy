{"ast":null,"code":"\"use client\";import{createContext,useContext,useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const SeniorModeContext=/*#__PURE__*/createContext(undefined);export function useSeniorMode(){const context=useContext(SeniorModeContext);if(!context){throw new Error(\"useSeniorMode must be used within a SeniorModeProvider\");}return context;}export function SeniorModeProvider(_ref){let{children}=_ref;const[isSeniorMode,setIsSeniorMode]=useState(false);useEffect(()=>{const saved=localStorage.getItem(\"wellnest_senior_mode\");if(saved){setIsSeniorMode(JSON.parse(saved));}},[]);const toggleSeniorMode=()=>{const newMode=!isSeniorMode;setIsSeniorMode(newMode);localStorage.setItem(\"wellnest_senior_mode\",JSON.stringify(newMode));};return/*#__PURE__*/_jsx(SeniorModeContext.Provider,{value:{isSeniorMode,toggleSeniorMode},children:/*#__PURE__*/_jsx(\"div\",{className:isSeniorMode?\"senior-mode\":\"\",children:children})});}","map":{"version":3,"names":["createContext","useContext","useState","useEffect","jsx","_jsx","SeniorModeContext","undefined","useSeniorMode","context","Error","SeniorModeProvider","_ref","children","isSeniorMode","setIsSeniorMode","saved","localStorage","getItem","JSON","parse","toggleSeniorMode","newMode","setItem","stringify","Provider","value","className"],"sources":["C:/Users/Rohit/Downloads/wellnest-platform/client/src/contexts/SeniorModeContext.tsx"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useState, useEffect, type ReactNode } from \"react\"\n\ninterface SeniorModeContextType {\n  isSeniorMode: boolean\n  toggleSeniorMode: () => void\n}\n\nconst SeniorModeContext = createContext<SeniorModeContextType | undefined>(undefined)\n\nexport function useSeniorMode() {\n  const context = useContext(SeniorModeContext)\n  if (!context) {\n    throw new Error(\"useSeniorMode must be used within a SeniorModeProvider\")\n  }\n  return context\n}\n\ninterface SeniorModeProviderProps {\n  children: ReactNode\n}\n\nexport function SeniorModeProvider({ children }: SeniorModeProviderProps) {\n  const [isSeniorMode, setIsSeniorMode] = useState(false)\n\n  useEffect(() => {\n    const saved = localStorage.getItem(\"wellnest_senior_mode\")\n    if (saved) {\n      setIsSeniorMode(JSON.parse(saved))\n    }\n  }, [])\n\n  const toggleSeniorMode = () => {\n    const newMode = !isSeniorMode\n    setIsSeniorMode(newMode)\n    localStorage.setItem(\"wellnest_senior_mode\", JSON.stringify(newMode))\n  }\n\n  return (\n    <SeniorModeContext.Provider value={{ isSeniorMode, toggleSeniorMode }}>\n      <div className={isSeniorMode ? \"senior-mode\" : \"\"}>{children}</div>\n    </SeniorModeContext.Provider>\n  )\n}\n"],"mappings":"AAAA,YAAY,CAEZ,OAASA,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAwB,OAAO,QAAAC,GAAA,IAAAC,IAAA,yBAOtF,KAAM,CAAAC,iBAAiB,cAAGN,aAAa,CAAoCO,SAAS,CAAC,CAErF,MAAO,SAAS,CAAAC,aAAaA,CAAA,CAAG,CAC9B,KAAM,CAAAC,OAAO,CAAGR,UAAU,CAACK,iBAAiB,CAAC,CAC7C,GAAI,CAACG,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,wDAAwD,CAAC,CAC3E,CACA,MAAO,CAAAD,OAAO,CAChB,CAMA,MAAO,SAAS,CAAAE,kBAAkBA,CAAAC,IAAA,CAAwC,IAAvC,CAAEC,QAAkC,CAAC,CAAAD,IAAA,CACtE,KAAM,CAACE,YAAY,CAAEC,eAAe,CAAC,CAAGb,QAAQ,CAAC,KAAK,CAAC,CAEvDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,sBAAsB,CAAC,CAC1D,GAAIF,KAAK,CAAE,CACTD,eAAe,CAACI,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,CAAC,CACpC,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAK,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAAAC,OAAO,CAAG,CAACR,YAAY,CAC7BC,eAAe,CAACO,OAAO,CAAC,CACxBL,YAAY,CAACM,OAAO,CAAC,sBAAsB,CAAEJ,IAAI,CAACK,SAAS,CAACF,OAAO,CAAC,CAAC,CACvE,CAAC,CAED,mBACEjB,IAAA,CAACC,iBAAiB,CAACmB,QAAQ,EAACC,KAAK,CAAE,CAAEZ,YAAY,CAAEO,gBAAiB,CAAE,CAAAR,QAAA,cACpER,IAAA,QAAKsB,SAAS,CAAEb,YAAY,CAAG,aAAa,CAAG,EAAG,CAAAD,QAAA,CAAEA,QAAQ,CAAM,CAAC,CACzC,CAAC,CAEjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}