{"ast":null,"code":"\"use client\";import{createContext,useContext,useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export function useAuth(){const context=useContext(AuthContext);if(!context){throw new Error(\"useAuth must be used within an AuthProvider\");}return context;}export function AuthProvider(_ref){let{children}=_ref;const[user,setUser]=useState(null);useEffect(()=>{// Check for stored user data on app load\nconst storedUser=localStorage.getItem(\"wellnest_user\");const storedToken=localStorage.getItem(\"wellnest_token\");if(storedUser&&storedToken){setUser(JSON.parse(storedUser));}},[]);const login=userData=>{setUser(userData);localStorage.setItem(\"wellnest_user\",JSON.stringify(userData));};const logout=()=>{setUser(null);localStorage.removeItem(\"wellnest_user\");localStorage.removeItem(\"wellnest_token\");};const isAuthenticated=!!user;return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,logout,isAuthenticated},children:children});}","map":{"version":3,"names":["createContext","useContext","useState","useEffect","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","user","setUser","storedUser","localStorage","getItem","storedToken","JSON","parse","login","userData","setItem","stringify","logout","removeItem","isAuthenticated","Provider","value"],"sources":["C:/Users/Rohit/Downloads/wellnest-platform/client/src/contexts/AuthContext.tsx"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useState, useEffect, type ReactNode } from \"react\"\n\ninterface User {\n  id: string\n  name: string\n  email: string\n  phone: string\n}\n\ninterface AuthContextType {\n  user: User | null\n  login: (userData: User) => void\n  logout: () => void\n  isAuthenticated: boolean\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\nexport function useAuth() {\n  const context = useContext(AuthContext)\n  if (!context) {\n    throw new Error(\"useAuth must be used within an AuthProvider\")\n  }\n  return context\n}\n\ninterface AuthProviderProps {\n  children: ReactNode\n}\n\nexport function AuthProvider({ children }: AuthProviderProps) {\n  const [user, setUser] = useState<User | null>(null)\n\n  useEffect(() => {\n    // Check for stored user data on app load\n    const storedUser = localStorage.getItem(\"wellnest_user\")\n    const storedToken = localStorage.getItem(\"wellnest_token\")\n\n    if (storedUser && storedToken) {\n      setUser(JSON.parse(storedUser))\n    }\n  }, [])\n\n  const login = (userData: User) => {\n    setUser(userData)\n    localStorage.setItem(\"wellnest_user\", JSON.stringify(userData))\n  }\n\n  const logout = () => {\n    setUser(null)\n    localStorage.removeItem(\"wellnest_user\")\n    localStorage.removeItem(\"wellnest_token\")\n  }\n\n  const isAuthenticated = !!user\n\n  return <AuthContext.Provider value={{ user, login, logout, isAuthenticated }}>{children}</AuthContext.Provider>\n}\n"],"mappings":"AAAA,YAAY,CAEZ,OAASA,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAwB,OAAO,QAAAC,GAAA,IAAAC,IAAA,yBAgBtF,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAA8BO,SAAS,CAAC,CAEzE,MAAO,SAAS,CAAAC,OAAOA,CAAA,CAAG,CACxB,KAAM,CAAAC,OAAO,CAAGR,UAAU,CAACK,WAAW,CAAC,CACvC,GAAI,CAACG,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB,CAMA,MAAO,SAAS,CAAAE,YAAYA,CAAAC,IAAA,CAAkC,IAAjC,CAAEC,QAA4B,CAAC,CAAAD,IAAA,CAC1D,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAc,IAAI,CAAC,CAEnDC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAa,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CACxD,KAAM,CAAAC,WAAW,CAAGF,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAE1D,GAAIF,UAAU,EAAIG,WAAW,CAAE,CAC7BJ,OAAO,CAACK,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,CAAC,CACjC,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAM,KAAK,CAAIC,QAAc,EAAK,CAChCR,OAAO,CAACQ,QAAQ,CAAC,CACjBN,YAAY,CAACO,OAAO,CAAC,eAAe,CAAEJ,IAAI,CAACK,SAAS,CAACF,QAAQ,CAAC,CAAC,CACjE,CAAC,CAED,KAAM,CAAAG,MAAM,CAAGA,CAAA,GAAM,CACnBX,OAAO,CAAC,IAAI,CAAC,CACbE,YAAY,CAACU,UAAU,CAAC,eAAe,CAAC,CACxCV,YAAY,CAACU,UAAU,CAAC,gBAAgB,CAAC,CAC3C,CAAC,CAED,KAAM,CAAAC,eAAe,CAAG,CAAC,CAACd,IAAI,CAE9B,mBAAOT,IAAA,CAACC,WAAW,CAACuB,QAAQ,EAACC,KAAK,CAAE,CAAEhB,IAAI,CAAEQ,KAAK,CAAEI,MAAM,CAAEE,eAAgB,CAAE,CAAAf,QAAA,CAAEA,QAAQ,CAAuB,CAAC,CACjH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}