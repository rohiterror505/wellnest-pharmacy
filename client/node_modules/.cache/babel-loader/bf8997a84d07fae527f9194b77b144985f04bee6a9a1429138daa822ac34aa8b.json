{"ast":null,"code":"\"use client\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Rohit\\\\Downloads\\\\wellnest-platform\\\\client\\\\src\\\\core\\\\CartContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport { getMedicineById } from \"./medicines\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext(undefined);\nexport function useCart() {\n  _s();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error(\"useCart must be used within a CartProvider\");\n  }\n  return context;\n}\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function CartProvider({\n  children\n}) {\n  _s2();\n  const [cartItems, setCartItems] = useState([]);\n  useEffect(() => {\n    const storedCart = localStorage.getItem(\"wellnest_cart\");\n    if (storedCart) {\n      setCartItems(JSON.parse(storedCart));\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"wellnest_cart\", JSON.stringify(cartItems));\n  }, [cartItems]);\n  const addToCart = (medicineId, quantity = 1) => {\n    const medicine = getMedicineById(medicineId);\n    if (!medicine) return;\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(item => item.id === medicineId);\n      if (existingItem) {\n        return prevItems.map(item => item.id === medicineId ? {\n          ...item,\n          quantity: item.quantity + quantity\n        } : item);\n      } else {\n        return [...prevItems, {\n          id: medicineId,\n          quantity,\n          medicine\n        }];\n      }\n    });\n  };\n  const removeFromCart = medicineId => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== medicineId));\n  };\n  const updateQuantity = (medicineId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(medicineId);\n      return;\n    }\n    setCartItems(prevItems => prevItems.map(item => item.id === medicineId ? {\n      ...item,\n      quantity\n    } : item));\n  };\n  const clearCart = () => {\n    setCartItems([]);\n  };\n  const getTotalPrice = () => {\n    return cartItems.reduce((total, item) => total + item.medicine.price * item.quantity, 0);\n  };\n  const getTotalItems = () => {\n    return cartItems.reduce((total, item) => total + item.quantity, 0);\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearCart,\n      getTotalPrice,\n      getTotalItems\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s2(CartProvider, \"jdONvkEabzLc64SbXgqXBHRMg9M=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["_jsxFileName","_s","$RefreshSig$","_s2","createContext","useContext","useState","useEffect","getMedicineById","jsxDEV","_jsxDEV","CartContext","undefined","useCart","context","Error","CartProvider","children","cartItems","setCartItems","storedCart","localStorage","getItem","JSON","parse","setItem","stringify","addToCart","medicineId","quantity","medicine","prevItems","existingItem","find","item","id","map","removeFromCart","filter","updateQuantity","clearCart","getTotalPrice","reduce","total","price","getTotalItems","Provider","value","fileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Rohit/Downloads/wellnest-platform/client/src/core/CartContext.tsx"],"sourcesContent":["\"use client\"\n\nimport { createContext, useContext, useState, useEffect, type ReactNode } from \"react\"\nimport { getMedicineById, Medicine } from \"./medicines\"\n\ninterface CartItem {\n  id: number\n  quantity: number\n  medicine: Medicine\n}\n\ninterface CartContextType {\n  cartItems: CartItem[]\n  addToCart: (medicineId: number, quantity?: number) => void\n  removeFromCart: (medicineId: number) => void\n  updateQuantity: (medicineId: number, quantity: number) => void\n  clearCart: () => void\n  getTotalPrice: () => number\n  getTotalItems: () => number\n}\n\nconst CartContext = createContext<CartContextType | undefined>(undefined)\n\nexport function useCart() {\n  const context = useContext(CartContext)\n  if (!context) {\n    throw new Error(\"useCart must be used within a CartProvider\")\n  }\n  return context\n}\n\ninterface CartProviderProps {\n  children: ReactNode\n}\n\nexport function CartProvider({ children }: CartProviderProps) {\n  const [cartItems, setCartItems] = useState<CartItem[]>([])\n\n  useEffect(() => {\n    const storedCart = localStorage.getItem(\"wellnest_cart\")\n    if (storedCart) {\n      setCartItems(JSON.parse(storedCart))\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"wellnest_cart\", JSON.stringify(cartItems))\n  }, [cartItems])\n\n  const addToCart = (medicineId: number, quantity = 1) => {\n    const medicine = getMedicineById(medicineId)\n    if (!medicine) return\n\n    setCartItems((prevItems) => {\n      const existingItem = prevItems.find((item) => item.id === medicineId)\n\n      if (existingItem) {\n        return prevItems.map((item) =>\n          item.id === medicineId ? { ...item, quantity: item.quantity + quantity } : item,\n        )\n      } else {\n        return [...prevItems, { id: medicineId, quantity, medicine }]\n      }\n    })\n  }\n\n  const removeFromCart = (medicineId: number) => {\n    setCartItems((prevItems) => prevItems.filter((item) => item.id !== medicineId))\n  }\n\n  const updateQuantity = (medicineId: number, quantity: number) => {\n    if (quantity <= 0) {\n      removeFromCart(medicineId)\n      return\n    }\n\n    setCartItems((prevItems) => prevItems.map((item) => (item.id === medicineId ? { ...item, quantity } : item)))\n  }\n\n  const clearCart = () => {\n    setCartItems([])\n  }\n\n  const getTotalPrice = () => {\n    return cartItems.reduce((total, item) => total + item.medicine.price * item.quantity, 0)\n  }\n\n  const getTotalItems = () => {\n    return cartItems.reduce((total, item) => total + item.quantity, 0)\n  }\n\n  return (\n    <CartContext.Provider\n      value={{\n        cartItems,\n        addToCart,\n        removeFromCart,\n        updateQuantity,\n        clearCart,\n        getTotalPrice,\n        getTotalItems,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}